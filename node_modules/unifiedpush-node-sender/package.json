{
  "name": "unifiedpush-node-sender",
  "version": "0.7.0",
  "description": "Sender api for the AeroGear Unified Push server",
  "homepage": "https://github.com/aerogear/aerogear-unifiedpush-nodejs-client",
  "author": {
    "name": "Red Hat, Inc.",
    "url": "http://aerogear.org"
  },
  "main": "lib/unifiedpush-node-sender",
  "maintainers": {
    "name": "Lucas Holmquist",
    "email": "lholmqui@redhat.com"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:aerogear/aerogear-unifiedpush-nodejs-client.git"
  },
  "bugs": {
    "url": "https://issues.jboss.org/browse/AGPUSH"
  },
  "licenses": [
    {
      "type": "Apache-2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  ],
  "devDependencies": {
    "chai": "~1.7.2",
    "sinon": "~1.7.3",
    "sinon-chai": "~2.4.0",
    "mocha": "~1.12.1",
    "nock": "~0.22.1"
  },
  "scripts": {
    "test": "mocha"
  },
  "readme": "# unifiedpush-node-sender [![Build Status](https://secure.travis-ci.org/aerogear/aerogear-unifiedpush-nodejs-client.png?branch=master)](https://travis-ci.org/aerogear/aerogear-unifiedpush-nodejs-client)\n\nNode Sender API for the AeroGear Unified Push server\n\n## Getting Started\n\n### Pre Reqs:\n* node.js\n* npm\n* git\n\n### Building\n\nclone and install:\n\n    $ git@github.com:aerogear/aerogear-unifiedpush-nodejs-client.git\n\n    $ cd aerogear-unifiedpush-nodejs-client\n\n    $ npm install\n\n### Running Tests\n\n    $ npm test\n\n\n### Add to a Project\n\nIn your project do\n\n    npm install path/to/aerogear-unified-push-node-client\n\nor\n\ninstall from npm\n\n    npm install unifiedpush-node-sender\n\n\n\n## Examples\n\nRequire the `unifiedpush-node-sender` library\n\n    var agSender = require( \"unifiedpush-node-sender\" ),\n        url = \"http://localhost:8080/ag-push\";\n\n### Send a Message\n\nYou can use either listen for the success and error events\n\n\n    agSender.Sender( url ).send( message, settings ).on( \"success\", function( response ) {\n        console.log( \"success called\", response );\n    });\n\nOr you can use a callback\n\n    agSender.Sender( url ).send( message, settings, function( err, response ) {\n        if( !err ) {\n            console.log( \"success called\", response );\n            return;\n        }\n    });\n",
  "readmeFilename": "README.md",
  "_id": "unifiedpush-node-sender@0.7.0",
  "_from": "unifiedpush-node-sender@"
}
